import { allTrainerItems } from "./all-trainer-items";
import {
  type BOOLEAN_HOLDER_PARAMS,
  type NUMBER_HOLDER_PARAMS,
  type POKEMON_PARAMS,
  type PRESERVE_BERRY_PARAMS,
  TRAINER_ITEM_EFFECT,
} from "./trainer-item";
import type { TrainerItemManager } from "./trainer-item-manager";

export type APPLY_TRAINER_ITEMS_PARAMS = {
  [TRAINER_ITEM_EFFECT.LEVEL_INCREMENT_BOOSTER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.PRESERVE_BERRY]: PRESERVE_BERRY_PARAMS;
  [TRAINER_ITEM_EFFECT.HEALING_BOOSTER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.EXP_BOOSTER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.MONEY_MULTIPLIER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.HIDDEN_ABILITY_CHANCE_BOOSTER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.SHINY_RATE_BOOSTER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.CRITICAL_CATCH_CHANCE_BOOSTER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.EXTRA_REWARD]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.HEAL_SHOP_COST]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.DOUBLE_BATTLE_CHANCE_BOOSTER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.TEMP_STAT_STAGE_BOOSTER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.TEMP_CRIT_BOOSTER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.ENEMY_DAMAGE_BOOSTER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.ENEMY_DAMAGE_REDUCER]: NUMBER_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.ENEMY_HEAL]: POKEMON_PARAMS;
  [TRAINER_ITEM_EFFECT.ENEMY_ATTACK_STATUS_CHANCE]: POKEMON_PARAMS;
  [TRAINER_ITEM_EFFECT.ENEMY_STATUS_HEAL_CHANCE]: POKEMON_PARAMS;
  [TRAINER_ITEM_EFFECT.ENEMY_ENDURE_CHANCE]: BOOLEAN_HOLDER_PARAMS;
  [TRAINER_ITEM_EFFECT.ENEMY_FUSED_CHANCE]: BOOLEAN_HOLDER_PARAMS;
};

export function applyTrainerItems<T extends TRAINER_ITEM_EFFECT>(
  effect: T,
  manager: TrainerItemManager,
  params: APPLY_TRAINER_ITEMS_PARAMS[T],
) {
  if (manager) {
    for (const item of Object.keys(manager.trainerItems)) {
      if (allTrainerItems[item].effects.includes(effect)) {
        allTrainerItems[item].apply(manager, params);
      }
    }
  }
}
